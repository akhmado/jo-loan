generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id

  name          String
  email         String
  emailVerified Boolean
  image         String?

  sessions Session[]
  accounts Account[]
  loans    Loan[]

  createdAt DateTime
  updatedAt DateTime

  @@unique([email])
  @@map("user")
}

model Session {
  id String @id

  expiresAt DateTime
  token     String
  ipAddress String?
  userAgent String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime
  updatedAt DateTime

  @@unique([token])
  @@map("session")
}

model Account {
  id String @id

  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime
  updatedAt DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Loan {
  id String @id @default(cuid())

  amount         Decimal
  interestRate   Decimal
  termMonths     Int
  status         LoanStatus @default(PENDING)
  purpose        String?
  monthlyPayment Decimal?
  totalInterest  Decimal?
  totalAmount    Decimal?
  startDate      DateTime?
  endDate        DateTime?

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("loan")
}

enum LoanStatus {
  PENDING
  APPROVED
  REJECTED
  ACTIVE
  COMPLETED
  DEFAULTED
}
